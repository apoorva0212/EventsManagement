import java.sql.*;
import javax.swing.JOptionPane;

public class event_selection extends javax.swing.JFrame {

    Connection con;
    ResultSet rs;
    Statement stmt;
    PreparedStatement pst;
    String sql = "select * from events where event=?";

    public event_selection() {
        initComponents();
        con = DBConnect.connectMySQL();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        event = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        receptionRBN = new javax.swing.JRadioButton();
        weddingRBN = new javax.swing.JRadioButton();
        engagementRBN = new javax.swing.JRadioButton();
        birthdayRBN = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        chargesTF = new javax.swing.JTextField();
        officialRBN = new javax.swing.JRadioButton();
        nextBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(800, 480));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Brush Script MT", 1, 24)); // NOI18N
        jLabel1.setText("SELECT  YOUR  PREFERENTIAL  EVENT:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(160, 10, 480, 31);

        event.add(receptionRBN);
        receptionRBN.setFont(new java.awt.Font("Brush Script MT", 1, 18)); // NOI18N
        receptionRBN.setText("RECEPTION");
        receptionRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionRBNActionPerformed(evt);
            }
        });
        receptionRBN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                receptionRBNFocusGained(evt);
            }
        });
        getContentPane().add(receptionRBN);
        receptionRBN.setBounds(70, 150, 140, 33);

        event.add(weddingRBN);
        weddingRBN.setFont(new java.awt.Font("Brush Script MT", 1, 18)); // NOI18N
        weddingRBN.setText("WEDDING");
        weddingRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weddingRBNActionPerformed(evt);
            }
        });
        weddingRBN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                weddingRBNFocusGained(evt);
            }
        });
        getContentPane().add(weddingRBN);
        weddingRBN.setBounds(350, 260, 130, 31);

        event.add(engagementRBN);
        engagementRBN.setFont(new java.awt.Font("Brush Script MT", 1, 18)); // NOI18N
        engagementRBN.setText("ENGAGEMENT");
        engagementRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                engagementRBNActionPerformed(evt);
            }
        });
        getContentPane().add(engagementRBN);
        engagementRBN.setBounds(620, 50, 150, 31);

        event.add(birthdayRBN);
        birthdayRBN.setFont(new java.awt.Font("Brush Script MT", 1, 18)); // NOI18N
        birthdayRBN.setText("BIRTHDAY");
        birthdayRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthdayRBNActionPerformed(evt);
            }
        });
        getContentPane().add(birthdayRBN);
        birthdayRBN.setBounds(70, 250, 130, 31);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Minimal Charges:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(280, 350, 120, 17);

        chargesTF.setEditable(false);
        chargesTF.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        chargesTF.setForeground(new java.awt.Color(51, 51, 51));
        getContentPane().add(chargesTF);
        chargesTF.setBounds(410, 350, 90, 23);

        event.add(officialRBN);
        officialRBN.setFont(new java.awt.Font("Brush Script MT", 1, 18)); // NOI18N
        officialRBN.setText("OFFICIAL");
        officialRBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                officialRBNActionPerformed(evt);
            }
        });
        getContentPane().add(officialRBN);
        officialRBN.setBounds(560, 250, 120, 31);

        nextBTN.setBackground(new java.awt.Color(0, 0, 0));
        nextBTN.setFont(new java.awt.Font("Bradley Hand ITC", 1, 24)); // NOI18N
        nextBTN.setText("N E X T >>");
        nextBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBTNActionPerformed(evt);
            }
        });
        getContentPane().add(nextBTN);
        nextBTN.setBounds(590, 370, 170, 39);

        backBTN.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        backBTN.setText("BACK");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });
        getContentPane().add(backBTN);
        backBTN.setBounds(20, 380, 100, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/events.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 800, 450);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-811)/2, (screenSize.height-481)/2, 811, 481);
    }// </editor-fold>//GEN-END:initComponents

    private void weddingRBNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weddingRBNFocusGained
    }//GEN-LAST:event_weddingRBNFocusGained

    private void receptionRBNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_receptionRBNFocusGained
    }//GEN-LAST:event_receptionRBNFocusGained

    private void receptionRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionRBNActionPerformed
        String event = "reception";
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, event);
            rs = pst.executeQuery();
            if (rs.next()) {
                chargesTF.setText(rs.getInt("event_charges") + "");
            }
            pst.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_receptionRBNActionPerformed

    private void weddingRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weddingRBNActionPerformed
        String event = "wedding";
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, event);
            rs = pst.executeQuery();
            if (rs.next()) {
                chargesTF.setText(rs.getInt("event_charges") + "");
            }
            pst.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_weddingRBNActionPerformed

    private void engagementRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_engagementRBNActionPerformed
        String event = "engagement";
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, event);
            rs = pst.executeQuery();
            if (rs.next()) {
                chargesTF.setText(rs.getInt("event_charges") + "");
            }
            pst.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_engagementRBNActionPerformed

    private void birthdayRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthdayRBNActionPerformed
        String event = "birthday";
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, event);
            rs = pst.executeQuery();
            if (rs.next()) {
                chargesTF.setText(rs.getInt("event_charges") + "");
            }
            pst.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_birthdayRBNActionPerformed

    private void officialRBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_officialRBNActionPerformed
        String event = "official";
        try {
            pst = con.prepareStatement(sql);
            pst.setString(1, event);
            rs = pst.executeQuery();
            if (rs.next()) {
                chargesTF.setText(rs.getInt("event_charges") + "");
            }
            pst.close();
            rs.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_officialRBNActionPerformed

    private void nextBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBTNActionPerformed
        String str = "";
        if (!(receptionRBN.isSelected() || weddingRBN.isSelected() || engagementRBN.isSelected() || birthdayRBN.isSelected() || officialRBN.isSelected())) {
            JOptionPane.showMessageDialog(null, "Select One Of The Either Options....");
        }


        if (receptionRBN.isSelected() || weddingRBN.isSelected() || engagementRBN.isSelected()) {
            if (receptionRBN.isSelected()) {
                new religion().setVisible(true);
                setVisible(false);
            } else if (weddingRBN.isSelected()) {
                new religion().setVisible(true);
                setVisible(false);
            }
            if (engagementRBN.isSelected()) {
                new religion().setVisible(true);
                setVisible(false);
            }
        }


        if (birthdayRBN.isSelected()) {
            new birthday_theme_selection().setVisible(true);
            dispose();
        }


        if (officialRBN.isSelected()) {
            new official_theme_selection().setVisible(true);
            dispose();
        }



    }//GEN-LAST:event_nextBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        new Homepage().setVisible(true);
        dispose();
    }//GEN-LAST:event_backBTNActionPerformed

    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(event_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(event_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(event_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(event_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new event_selection().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JRadioButton birthdayRBN;
    private javax.swing.JTextField chargesTF;
    private javax.swing.JRadioButton engagementRBN;
    private javax.swing.ButtonGroup event;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton nextBTN;
    private javax.swing.JRadioButton officialRBN;
    private javax.swing.JRadioButton receptionRBN;
    private javax.swing.JRadioButton weddingRBN;
    // End of variables declaration//GEN-END:variables
}
